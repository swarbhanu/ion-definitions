# Represents a physical package with a manufacturer, model, and serial number, containing one to many
# sensors that communicate through a single onboard data interface.
InstrumentDevice: !Extends_Device
  firmware_version: ""
  #datum_characterization: "" #later will be an object
  hardware_version: ""
  # The date of the last instrument calibration, expressed in ISO format. Manually managed in R2.
  last_calibration_datetime: ""




---
PrimaryInterface: !enum (values=(RS232, RS245, TCPIP, TTL, ETHER, ACOUS, INDUCT, USB, IE1394, BLUE2TH, REMOVABLE), default=RS232)

---
# Specifies a distinguished type of instruments, derived from the manufacturer's
# model number, based on common attributes.
InstrumentModel: !Extends_DeviceModel
  instrument_family: ""     # values= CAM, CO2, CTD, DO2, FDC, FLO, HYD, IES, MET, MSP, NIT, NUT, OBS, OPT, PRS, RAS, SFL, VEL, WAV, ZPL, default=CAM
  baud_rate_default: ""
  # Polled vs...
  mixed_sampling_mode: True
  # Can you manage the system while it is operating
  inline_management: True
  clock_max_drift: 0.0
  clock_notes: ""
  operational_depth_maximum: 0.0
  survival_depth_maximum: 0.0
  internal_data_storage: True
  # time system must be on before sampling.
  required_on_time: ""
  power_source: ""
  electrical_notes: ""
  hotel_current: ""
  integrated_inductive_modem_available: True
  internal_battery: True
  # minimum voltage supported by internal power supply
  power_supply_voltage_minimum: 0.0
  # maximum voltage supported by internal power supply
  power_supply_voltage_maximum: 0.0
  #instrument_class: ""  # values=OPTAA, CAMDS, CAMHD, CTDAV, CTDBP, CTDGV, CTDMO, CTDPF, PPSDN, OTISF, FLORT, FLORD, FDCHP, FDCLP, HYDBB, HYDLF, HPIES, MASSP, METBK, NUTR4, NUTNR, DOFST, DOSTA, PARAD, PCO2A, PCO2W, PHSEN, ZPLSC, ZPLSG, BOTPT, PRESF, PREST, OSBSBB, OBSBK, OBSSP, OBSSK, SPKIR, THSPH, TRHPH, TMPSF, VELPT, VELPT, VEL3D, ADCPT, ADCPV, ADCPS, ADCPA, OSMOI, RASFL, WAVSS, default=OPTAA
  #data_record_description: "" #later will be an object
  # the principal interface by which the instrument communicates (typically via its platform) with OOI
  primary_interface: !PrimaryInterface   # values=RS232, RS245, TCPIP, TTL, ETHER, ACOUS, INDUCT, USB, IE1394, BLUE2TH, REMOVABLE, default=RS232
  #secondary_interface: []
  #baud_supported: []
  #writeable_storage: !enum (name=WriteableStorageType, values=(NONE, PUCK, OTHER), default=NONE)
  instrument_classes_supported: []  # The list of instrument classes this instrument model can support
  

# Defines an agent/driver combination compatible with a specific instrument model.
InstrumentAgent: !Extends_DeviceAgent

# Describes parameters for an instance of an instrument agent for a specific device.
InstrumentAgentInstance: !Extends_AgentInstance
  svr_addr: ""
  comms_method: ""
  comms_device_address: ""
  comms_device_port: 0
  comms_server_address: ""
  comms_server_port: 0
  #replace all the individual items about with driver_config and agent_config dict
  driver_config: {}
  agent_config: {}
  port_agent_config: {}
  port_agent_work_dir: ""
  port_agent_delimeter: []

