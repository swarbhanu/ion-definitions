# Visualization service interface definition

name: visualization_service

docstring: Service is responsible for mantaining user sessions and collecting requested viz products, preparing them before returning them to the web client

dependencies: [resource_registry, pubsub_management, transform_management, data_retriever, dataset_management, data_process_management, workflow_management]


methods:
  # Interface available through the SGS
  initiate_realtime_visualization:
    docstring: |
      Initial request required to start a realtime chart for the specified data product. Returns a user specific token associated
      with the request that will be required for subsequent requests when polling data.
    in:
      data_product_id: ""
      visualization_parameters: {}
      callback: ""
    out:
      query_token: ""
    throws:
      BadRequest: Throws if the data_product_id paramater is missing
      NotFound: Throws if specified data product id or its visualization product does not exist

  get_realtime_visualization_data:
    docstring: |
      This operation returns a block of visualization chart data for displaying a data product in real time. This operation requires a
      user specific token which was provided from a previous request to the init_realtime_visualization operation. It returns a
      specialied JSONP data string.
    in:
      query_token: ""
    out:
      jsonp_visualization_data: ""
    throws:
      BadRequest: Throws if the query_token paramater is missing
      NotFound: Throws if specified query_token or its visualization product does not exist

  terminate_realtime_visualization_data:
    docstring: |
      This operation terminates and cleans up resources associated with realtime visualization data. This operation requires a
      user specific token which was provided from a previous request to the init_realtime_visualization operation.
    in:
      query_token: ""
    out:
    throws:
      BadRequest: Throws if specified query_token or its visualization product does not exist


  get_visualization_data:
    docstring: |
      This operation returns a block of visualization chart data for displaying a data product based on the set of
      visualization parameters. The visualization data is generated on demand and returns a specialied JSONP data string.
    in:
      data_product_id: ""
      visualization_parameters: {}
      callback: ""
    out:
      jsonp_visualization_data: ""
    throws:
      NotFound: Throws if specified data product id does not exist


  get_visualization_image:
    docstring: |
      This operation returns an image for a particular data product and set of visualization parameters. Depending on
      the attributes of the data product, it will either return a persisted image or will generate one on demand
      based on the set of visualization parameters. The return value should be a dict of the image content type
      (mime type) and the binary image data.
    in:
      data_product_id: ""
      visualization_parameters: {}
      callback: ""
    out:
      image_obj: {}
    throws:
      NotFound: Throws if specified data product id does not exist


  get_dataproduct_kml:
    docstring: |
      This operation returns a KML file containing geo-references for all the dataproducts active in the system.
      The KML file can be used for populating Google maps/earth.
    in:
      visualization_parameters: {}
    out:
      kml_file: ""
    throws:
      BadRequest: Throws if the KML could not be generated

  get_dummy_googledt:
    docstring: |
      Temp test method
    in:
      dt_size: 0
    out:
      google_dt: ""
    throws:
      BadRequest: Throws something